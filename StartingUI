
using { /Fortnite.com/Devices }
using { /Verse.org/Simulation }
using { /UnrealEngine.com/Temporary/Diagnostics }
using { /UnrealEngine.com/Temporary/UI }
using { /UnrealEngine.com/Temporary/SpatialMath }
using { /Fortnite.com/UI }
# A Verse-authored creative device that can be placed in a level
custom_ui := class(creative_device):

    @editable
    ButtonUI : button_device = button_device{}

    TextForButton<localizes> :message = "Hello"

    TextForSequence<localizes> : message = "Hi"
    var PlayerCanvas : canvas = canvas{}


    OnBegin<override>()<suspends>:void=
        # TODO: Replace this with your code
        ButtonUI.InteractedWithEvent.Subscribe(HandleButtonPress)
    
    CreateUI () : canvas = 
        
        ButtonToTeleport : button_loud = button_loud { DefaultText := TextForSequence }
        ButtonToTeleport.OnClick().Subscribe(HandleUIButtonClick)


        NewCanvas : canvas = canvas:
            Slots := array:
                canvas_slot:
                    Anchors := anchors{Minimum := vector2{X := 0.5, Y := 0.5}, Maximum := vector2{X := 0.5, Y := 0.5}} # (0, 0) is to left (1, 1) is bottom right
                    Offsets := margin{Top := 0.0, Left := 0.0, Right := 0.0, Bottom := 0.0}
                    Alignment := vector2{X := 0.5, Y := 0.5} # Center is anchored
                    SizeToContent := true
                    Widget := ButtonToTeleport

    HandleButtonPress( Dude : agent ) : void =
        if (Player := player[Dude], PlayerUI := GetPlayerUI[Player]):
            set PlayerCanvas = CreateUI()
            
            PlayerUI.AddWidget(PlayerCanvas, player_ui_slot{InputMode := ui_input_mode.All})        
            Print("HI")

    # Exectues when you press UI BUtton
    HandleUIButtonClick( Message : widget_message ) : void =
        Player := Message.Player
        if (PlayerUI := GetPlayerUI[Player]):
            PlayerUI.RemoveWidget(PlayerCanvas)
        
    
            
